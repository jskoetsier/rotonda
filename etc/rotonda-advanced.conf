# Advanced Rotonda Configuration
#
# This configuration demonstrates the new features:
# - On-disk database storage
# - Kafka input streams
# - External datasets in filters
#
# Read more about this configuration format here:
# https://rotonda.readthedocs.io/en/latest/config/

### 1. Global Settings

log_level = "info"
log_target = "stderr"
http_listen = ["0.0.0.0:8080"]

# Roto filter script with external data support
roto_script = "filters-advanced.roto"

### 2. External Data Sources

# HTTP-based external data source
[[external_data_sources]]
id = "rpki-validator"
type = "http"
url = "https://rpki-validator.example.com/api/v1/validity"
method = "GET"
timeout_secs = 30
refresh_interval_secs = 300
cache_ttl_secs = 600
auto_refresh = true

[external_data_sources.headers]
"Accept" = "application/json"
"User-Agent" = "Rotonda/0.4.3"

[external_data_sources.auth]
type = "bearer"
token = "your-api-token-here"

# File-based external data source
[[external_data_sources]]
id = "bogon-prefixes"
type = "file"
path = "/etc/rotonda/data/bogon-prefixes.json"
format = "json"
watch = true
refresh_interval_secs = 3600
cache_ttl_secs = 7200

# Database-based external data source
[[external_data_sources]]
id = "customer-prefixes"
type = "database"
connection_string = "postgresql://rotonda:password@localhost/routing_db"
query = "SELECT prefix, customer_id, tier FROM customer_prefixes WHERE active = true"
refresh_interval_secs = 1800
cache_ttl_secs = 3600
pool_size = 10

# Redis-based external data source
[[external_data_sources]]
id = "peer-status"
type = "redis"
url = "redis://localhost:6379"
key = "peer:status:*"
command = "HGETALL"
database = 0
refresh_interval_secs = 60
cache_ttl_secs = 120

### 3. Component Definitions

## Kafka Input

[units.kafka-bgp-updates]
type = "kafka-in"
brokers = ["kafka1.example.com:9092", "kafka2.example.com:9092"]
topic = "bgp-updates"
group_id = "rotonda-consumer"
format = "json"

[units.kafka-bgp-updates.consumer_config]
auto_offset_reset = "latest"
enable_auto_commit = true
auto_commit_interval_ms = 5000
session_timeout_ms = 30000

[units.kafka-bgp-updates.retry_config]
max_retries = 5
initial_delay_ms = 1000
max_delay_ms = 30000
backoff_multiplier = 2.0

## BMP Input (traditional)

[units.bmp-in]
type = "bmp-tcp-in"
listen = "0.0.0.0:11019"
http_api_path = "/bmp-routers/"

## BGP Input (traditional)

[units.bgp-in]
type = "bgp-tcp-in"
listen = "10.1.0.254:179"
my_asn = 64512
my_bgp_id = [10,1,0,254]

[units.bgp-in.peers."10.1.0.1"]
name = "PeerA"
remote_asn = 65001
protocols = ["Ipv4Unicast", "Ipv4Multicast", "Ipv6Unicast"]

## RIB with On-Disk Storage

[units.rib]
type = "rib"
sources = ["bmp-in", "bgp-in", "kafka-bgp-updates"]
http_api_path = "/rib/"

# On-disk storage configuration
[units.rib.storage]
type = "hybrid"
placement_strategy = "recent_in_memory"
memory_threshold = 500000
auto_migration = true

[units.rib.storage.disk]
path = "/var/lib/rotonda/rib-data"
max_size_bytes = 10737418240  # 10GB
compression = true
sync_mode = "normal"
cache_size = 50000
compaction_interval_secs = 3600

[units.rib.storage.memory]
# Memory-only configuration for hot data

## Filter Unit with External Data

[units.enhanced-filter]
type = "filter"
sources = ["rib"]
filter_name = "enhanced_route_filter"

## Virtual RIB for Customers

[units.customer-rib]
type = "rib"
sources = ["enhanced-filter"]
http_api_path = "/customer-rib/"
rib_type = "Virtual"

# Memory-only storage for virtual RIB
[units.customer-rib.storage]
type = "memory"

### 4. Output Targets

## MQTT Output with Enhanced Data

[targets.mqtt-enhanced]
type = "mqtt-out"
sources = ["enhanced-filter"]
destination = "mqtt-broker.example.com"
port = 1883
client_id = "rotonda-enhanced"
topic_template = "bgp/updates/{prefix}/{origin_asn}"

[targets.mqtt-enhanced.auth]
username = "rotonda"
password = "secure-password"

## File Output with External Data Context

[targets.enhanced-logfile]
type = "file-out"
sources = ["enhanced-filter"]
format = "json"
filename = "/var/log/rotonda/enhanced-routes.jsonl"
include_external_data = true

## Database Output

[targets.database]
type = "database-out"
sources = ["customer-rib"]
connection_string = "postgresql://rotonda:password@localhost/routing_db"
table_name = "processed_routes"
batch_size = 1000
flush_interval_secs = 30

### 5. Advanced Features Configuration

# Monitoring and metrics
[monitoring]
prometheus_metrics = true
detailed_timing = true
external_data_metrics = true

# Performance tuning
[performance]
worker_threads = 8
max_concurrent_queries = 100
query_timeout_secs = 30
bulk_insert_size = 1000

# Security settings
[security]
enable_tls = true
cert_file = "/etc/rotonda/certs/server.crt"
key_file = "/etc/rotonda/certs/server.key"
require_client_auth = false